@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

'LAYOUT_LEFT_RIGHT()
LAYOUT_WITH_LEGEND()

' title Верхнеуровневая архитектура системы обработки ошибок

!include components/c4/ext/sentry.iuml
!include components/c4/ext/user.iuml
!include components/c4/ext/developer.iuml

Container_Boundary(project, "Конкретный проект") {
  !include components/c4/app.iuml
  !include components/c4/sysmess.iuml
  !include components/c4/err_core.iuml
}

Rel(app, sysmess, "Создаёт типы ошибок используемые системой на основе ProtoAppError")
Rel(app, err_core, "Инициализирует типы ошибок при помощи InitErrorEngine, привязывает необходимые для них обработчики: IDGenerator, StackTraceCaller, SentryHandler")
Rel(app, err_core, "Настраивает персональный для системы ErrorHandler")

Rel(app, sysmess, "Создаёт новые AppError, оборачивает переданные из других слоёв системы")
Rel(sysmess, err_core, "Формирует события о возникновении ошибок, устанавливает ошибкам их персональный ID, прикрепляет стек вызовов")
Rel(err_core, sentry, "Отправляет информацию об ошибках в момент их возникновений")

Rel(app, err_core, "Передаёт ошибки с их персональным ID в ErrorHandler")
Rel(app, user, "Сообщает пользователю об ошибках с их персональным ID")

Rel(developer, sentry, "Анализирует ошибки")
Rel(developer, app, "Устраняет проблемы, на основе анализа создаёт новые типы ошибок")

Rel(user, developer, "Сообщает о проблеме через внешние каналы, указывая персональный ID ошибки")

@enduml